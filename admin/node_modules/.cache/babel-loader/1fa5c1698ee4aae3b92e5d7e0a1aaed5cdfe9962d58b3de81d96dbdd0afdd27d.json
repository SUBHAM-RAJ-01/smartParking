{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srajp\\\\Desktop\\\\wednesday\\\\admin\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport API from '../api';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminDashboard() {\n  _s();\n  const [slots, setSlots] = useState([]);\n  const [msg, setMsg] = useState('');\n  const fetchSlots = async () => {\n    const res = await API.get('/slots');\n    setSlots(res.data);\n  };\n  useEffect(() => {\n    fetchSlots();\n    const interval = setInterval(fetchSlots, 5000); // Poll every 5s\n    return () => clearInterval(interval);\n  }, []);\n  const handleForceRelease = async slotNumber => {\n    await API.post('/slots/admin/force-release', {\n      slotNumber\n    });\n    setMsg(`Slot #${slotNumber} released`);\n    fetchSlots();\n  };\n  const handleAssign = async slotNumber => {\n    const licensePlate = prompt('Enter license plate to assign:');\n    if (!licensePlate) return;\n    await API.post('/slots/admin/assign', {\n      slotNumber,\n      licensePlate\n    });\n    setMsg(`Assigned slot #${slotNumber} to ${licensePlate}`);\n    fetchSlots();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Slot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Vehicle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Entry Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: slots.map(slot => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: slot.slotNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: slot.occupied ? 'Occupied' : 'Available'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: slot.vehicle || '-'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: slot.entryTime ? new Date(slot.entryTime).toLocaleString() : '-'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleForceRelease(slot.slotNumber),\n              children: \"Force Release\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAssign(slot.slotNumber),\n              children: \"Manual Assign\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, slot.slotNumber, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"6Pmd6HL22t850vmbgczBYtePbck=\");\n_c = AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","API","jsxDEV","_jsxDEV","AdminDashboard","_s","slots","setSlots","msg","setMsg","fetchSlots","res","get","data","interval","setInterval","clearInterval","handleForceRelease","slotNumber","post","handleAssign","licensePlate","prompt","className","children","border","fileName","_jsxFileName","lineNumber","columnNumber","map","slot","occupied","vehicle","entryTime","Date","toLocaleString","onClick","_c","$RefreshReg$"],"sources":["C:/Users/srajp/Desktop/wednesday/admin/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport API from '../api';\r\nimport '../App.css';\r\n\r\nexport default function AdminDashboard() {\r\n  const [slots, setSlots] = useState([]);\r\n  const [msg, setMsg] = useState('');\r\n\r\n  const fetchSlots = async () => {\r\n    const res = await API.get('/slots');\r\n    setSlots(res.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSlots();\r\n    const interval = setInterval(fetchSlots, 5000); // Poll every 5s\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const handleForceRelease = async (slotNumber) => {\r\n    await API.post('/slots/admin/force-release', { slotNumber });\r\n    setMsg(`Slot #${slotNumber} released`);\r\n    fetchSlots();\r\n  };\r\n\r\n  const handleAssign = async (slotNumber) => {\r\n    const licensePlate = prompt('Enter license plate to assign:');\r\n    if (!licensePlate) return;\r\n    await API.post('/slots/admin/assign', { slotNumber, licensePlate });\r\n    setMsg(`Assigned slot #${slotNumber} to ${licensePlate}`);\r\n    fetchSlots();\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>Slot</th>\r\n            <th>Status</th>\r\n            <th>Vehicle</th>\r\n            <th>Entry Time</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {slots.map(slot => (\r\n            <tr key={slot.slotNumber}>\r\n              <td>{slot.slotNumber}</td>\r\n              <td>{slot.occupied ? 'Occupied' : 'Available'}</td>\r\n              <td>{slot.vehicle || '-'}</td>\r\n              <td>{slot.entryTime ? new Date(slot.entryTime).toLocaleString() : '-'}</td>\r\n              <td>\r\n                <button onClick={() => handleForceRelease(slot.slotNumber)}>Force Release</button>\r\n                <button onClick={() => handleAssign(slot.slotNumber)}>Manual Assign</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div>{msg}</div>\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}