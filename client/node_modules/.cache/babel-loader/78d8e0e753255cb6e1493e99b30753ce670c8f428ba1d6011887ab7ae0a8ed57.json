{"ast":null,"code":"import React,{useEffect,useState}from'react';import API from'../api';import Wallet from'./Wallet';import'../App.css';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";export default function Dashboard(_ref){let{user,setUser,startPayment}=_ref;const[slots,setSlots]=useState([]);const[msg,setMsg]=useState('');const[msgType,setMsgType]=useState('');const[reserved,setReserved]=useState(false);const[isLoading,setIsLoading]=useState(false);useEffect(()=>{fetchSlots();// Check if user already has a reserved slot\ncheckReservation();},[]);const fetchSlots=async()=>{try{const res=await API.get('/slots');setSlots(res.data);}catch(err){setMsg('Error fetching available slots');setMsgType('error');}};const checkReservation=async()=>{try{// Find if any slot is reserved with this user's license plate\nconst res=await API.get('/slots');const userSlot=res.data.find(slot=>slot.occupied&&slot.vehicle===user.licensePlate);if(userSlot){setReserved(true);}}catch(err){console.error('Error checking reservation status',err);}};const handleReserve=async()=>{setIsLoading(true);setMsg('');try{const res=await API.post('/slots/reserve',{licensePlate:user.licensePlate});setMsg(\"Successfully reserved parking slot #\".concat(res.data.slotNumber));setMsgType('success');setReserved(true);fetchSlots();}catch(err){var _err$response,_err$response$data;setMsg(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.error)||'Error reserving slot');setMsgType('error');}finally{setIsLoading(false);}};const handleExit=async()=>{setIsLoading(true);setMsg('');try{const res=await API.post('/slots/release',{licensePlate:user.licensePlate});setMsg(\"Successfully exited. Parking charge: \\u20B9\".concat(res.data.charge));setMsgType('success');setReserved(false);fetchSlots();}catch(err){var _err$response2,_err$response2$data;setMsg(((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.error)||'Error processing exit');setMsgType('error');}finally{setIsLoading(false);}};const available=slots.filter(s=>!s.occupied).length;const total=slots.length;return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-header\",children:/*#__PURE__*/_jsxs(\"h3\",{className:\"welcome-header\",children:[\"Welcome, \",user.name]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"location-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"location-name\",children:\"RVCE Ground Parking\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"slots-info\",children:[available,\"/\",total,\" slots available\"]})]}),msg&&/*#__PURE__*/_jsx(\"div\",{className:\"status-message \".concat(msgType==='success'?'success-message':'error-message'),children:msg}),/*#__PURE__*/_jsxs(\"div\",{className:\"action-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"action-btn reserve-btn\",onClick:handleReserve,disabled:reserved||available===0||isLoading,children:isLoading?'Processing...':'Reserve Parking'}),/*#__PURE__*/_jsx(\"button\",{className:\"action-btn exit-btn\",onClick:handleExit,disabled:!reserved||isLoading,children:isLoading?'Processing...':'Exit Parking'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"wallet-section\",children:/*#__PURE__*/_jsx(Wallet,{licensePlate:user.licensePlate,startPayment:startPayment})})]});}","map":{"version":3,"names":["React","useEffect","useState","API","Wallet","jsxs","_jsxs","jsx","_jsx","Dashboard","_ref","user","setUser","startPayment","slots","setSlots","msg","setMsg","msgType","setMsgType","reserved","setReserved","isLoading","setIsLoading","fetchSlots","checkReservation","res","get","data","err","userSlot","find","slot","occupied","vehicle","licensePlate","console","error","handleReserve","post","concat","slotNumber","_err$response","_err$response$data","response","handleExit","charge","_err$response2","_err$response2$data","available","filter","s","length","total","className","children","name","onClick","disabled"],"sources":["C:/Users/srajp/Desktop/wednesday/client/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport API from '../api';\r\nimport Wallet from './Wallet';\r\nimport '../App.css';\r\n\r\nexport default function Dashboard({ user, setUser, startPayment }) {\r\n  const [slots, setSlots] = useState([]);\r\n  const [msg, setMsg] = useState('');\r\n  const [msgType, setMsgType] = useState('');\r\n  const [reserved, setReserved] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchSlots();\r\n    // Check if user already has a reserved slot\r\n    checkReservation();\r\n  }, []);\r\n\r\n  const fetchSlots = async () => {\r\n    try {\r\n      const res = await API.get('/slots');\r\n      setSlots(res.data);\r\n    } catch (err) {\r\n      setMsg('Error fetching available slots');\r\n      setMsgType('error');\r\n    }\r\n  };\r\n\r\n  const checkReservation = async () => {\r\n    try {\r\n      // Find if any slot is reserved with this user's license plate\r\n      const res = await API.get('/slots');\r\n      const userSlot = res.data.find(slot => \r\n        slot.occupied && slot.vehicle === user.licensePlate\r\n      );\r\n      \r\n      if (userSlot) {\r\n        setReserved(true);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error checking reservation status', err);\r\n    }\r\n  };\r\n\r\n  const handleReserve = async () => {\r\n    setIsLoading(true);\r\n    setMsg('');\r\n    \r\n    try {\r\n      const res = await API.post('/slots/reserve', { licensePlate: user.licensePlate });\r\n      setMsg(`Successfully reserved parking slot #${res.data.slotNumber}`);\r\n      setMsgType('success');\r\n      setReserved(true);\r\n      fetchSlots();\r\n    } catch (err) {\r\n      setMsg(err.response?.data?.error || 'Error reserving slot');\r\n      setMsgType('error');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleExit = async () => {\r\n    setIsLoading(true);\r\n    setMsg('');\r\n    \r\n    try {\r\n      const res = await API.post('/slots/release', { licensePlate: user.licensePlate });\r\n      setMsg(`Successfully exited. Parking charge: â‚¹${res.data.charge}`);\r\n      setMsgType('success');\r\n      setReserved(false);\r\n      fetchSlots();\r\n    } catch (err) {\r\n      setMsg(err.response?.data?.error || 'Error processing exit');\r\n      setMsgType('error');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const available = slots.filter(s => !s.occupied).length;\r\n  const total = slots.length;\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"dashboard-header\">\r\n        <h3 className=\"welcome-header\">Welcome, {user.name}</h3>\r\n      </div>\r\n      \r\n      <div className=\"location-info\">\r\n        <div className=\"location-name\">RVCE Ground Parking</div>\r\n        <div className=\"slots-info\">\r\n          {available}/{total} slots available\r\n        </div>\r\n      </div>\r\n      \r\n      {msg && (\r\n        <div className={`status-message ${msgType === 'success' ? 'success-message' : 'error-message'}`}>\r\n          {msg}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"action-buttons\">\r\n        <button \r\n          className=\"action-btn reserve-btn\" \r\n          onClick={handleReserve} \r\n          disabled={reserved || available === 0 || isLoading}\r\n        >\r\n          {isLoading ? 'Processing...' : 'Reserve Parking'}\r\n        </button>\r\n        \r\n        <button \r\n          className=\"action-btn exit-btn\" \r\n          onClick={handleExit} \r\n          disabled={!reserved || isLoading}\r\n        >\r\n          {isLoading ? 'Processing...' : 'Exit Parking'}\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"wallet-section\">\r\n        <Wallet licensePlate={user.licensePlate} startPayment={startPayment} />\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}